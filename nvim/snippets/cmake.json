{
    "CMake Binary Build TemPlate": {
      "prefix": "bin_code",
      "body": [
        "cmake_minimum_required(VERSION 3.15)",
        "project(APP VERSION 0.0.0)",
        "",
        "set(CMAKE_C_STANDARD 11)",
        "set(CMAKE_CXX_STANDARD 14)",
        "",
        "set (CMAKE_C_COMPILER \"/usr/bin/gcc\")",
        "set (CMAKE_CXX_COMPILER \"/usr/bin/g++\")"
      ],
      "description": "CMake Binary Template"
    },
    "CMake Template": {
        "prefix": "template_bin_code",
        "body" : [
            "cmake_minimum_required(VERSION 3.15)",
            "if (ENV{VCPKG_ROOT})",
            "    message(FATAL_ERROR \"this project need config ENV 'VCPKG_ROOT'\")",
            "endif()",
            "set(CMAKE_SYSTEM_NAME \"Linux\")",
            "set(VCPKG_TARGET_TRIPLET \"x64-linux\")",
            "if (NOT CMAKE_SYSTEM_NAME STREQUAL \"Linux\")",
            "    message(FATAL_ERROR \"this project only support linux\")",
            "endif()",
            "",
            "set(CMAKE_TOOLCHAIN_FILE \"$$ENV{VCPKG_ROOT}\/scripts\/buildsystems\/vcpkg.cmake\")",
            "include($${CMAKE_TOOLCHAIN_FILE})",
            "",
            "project(APP",
            "    VERSION 0.0.0",
            "    LANGUAGES C CXX)",
            "",
            "set(CMAKE_C_STANDARD 11)",
            "set(CMAKE_CXX_STANDARD 20)",
            "",
            "set (CMAKE_C_COMPILER \"/usr/bin/gcc\")",
            "set (CMAKE_CXX_COMPILER \"/usr/bin/g++\")",
            "",
            "# cxx standard",
            "set(CMAKE_CXX_STANDARD_REQUIRED ON)",
            "set(CMAKE_CXX_STANDARD 20)",
            "",
            "# output path",
            "set(EXECUTABLE_OUTPUT_PATH $${CMAKE_SOURCE_DIR}/bin)",
            "set(CMAKE_EXPORT_COMPILE_COMMANDS 1)",
            "",
            "if (NOT CMAKE_INSTALL_PREFIX)",
            "set(CMAKE_INSTALL_PREFIX \"$${CMAKE_SOURCE_DIR}/installed\")",
            "endif()",
            "",
            "# 取消debug或者release目录前缀",
            "# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"$${CMAKE_BINARY_DIR}\/bin\/$$<0:>\")",
            "# set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"$${CMAKE_BINARY_DIR}\/bin\/$$<0:>\")",
            "",
            "# 给编译产物添加后缀",
            "# set(CMAKE_DEBUG_POSTFIX \"_d\")",
            "# set(CMAKE_RELEASE_POSTFIX \"_r\")",
            "# set_target_properties($${TARGET_NAME} PROPERTIES DEBUG_POSTFIX \"_d\")",
            "# set_target_properties($${TARGET_NAME} PROPERTIES RELEASE_POSTFIX \"_r\")",
            "",
            "# single generator default release",
            "if(NOT CMAKE_BUILD_TYPE)",
            "    set(CMAKE_BUILD_TYPE \"Release\")",
            "endif()",
            "# multi generator options configuration",
            "set(CMAKE_CONFIGURATION_TYPES \"Debug;Release;MinSizeRel;RelWithDebInfo\")",
            "",
            "# set msvc runtime",
            "# 多线程静态运行库和多线程静态调试运行库",
            "set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$$<$$<CONFIG:Debug>:Debug>\")",
            "# 多线程运行库和多线程调试运行库",
            "#set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$$<$$<CONFIG:Debug>:Debug>DLL\")",
            "",
            "# 查找特定路径下的 pkg-config",
            "# find_program(PKG_CONFIG_EXECUTABLE NAMES pkg-config HINTS \"$${VCPKG_INSTALLED_BIN}\/pkg-config\")",
            "#set(ENV{PKG_CONFIG_PATH} \"$${CMAKE_SOURCE_DIR}\/lib\/pkgconfig\")",
            "",
            "message(STATUS \"===========================================\")",
            "message(STATUS \" Build Type: $${CMAKE_BUILD_TYPE}\")",
            "# version",
            "if(CMAKE_C_COMPILER_LOADED)",
            "    message(STATUS \" C compiler id: $${CMAKE_C_COMPILER_ID}\")",
            "    message(STATUS \" C compiler version is: $${CMAKE_C_COMPILER_VERSION}\")",
            "endif()",
            "",
            "if(CMAKE_CXX_COMPILER_LOADED)",
            "    message(STATUS \" C++ compiler id: $${CMAKE_CXX_COMPILER_ID}\")",
            "   message(STATUS \" C++ compiler version is: $${CMAKE_CXX_COMPILER_VERSION}\")",
            "endif()",
            "message(STATUS \" C STANDARD: $${CMAKE_C_STANDARD}\")",
            "message(STATUS \" CXX STANDARD: $${CMAKE_CXX_STANDARD}\")",
            "message(STATUS \" Generator: $${CMAKE_GENERATOR}\")",
            "message(STATUS \" Installed Path: $${CMAKE_INSTALL_PREFIX}\")",
            "message(STATUS \" Vcpkg Install Position: $$ENV{VCPKG_ROOT}\")",
            "message(STATUS \" Pkgconfig Install Position: $$ENV{PKG_CONFIG_PATH}\")",
            "message(STATUS \"===========================================\")",
            "",
            "add_executable($${PROJECT_NAME})",
            "",
            "# options",
            "target_compile_options($${PROJECT_NAME}",
            "        # C",
            "        PRIVATE",
            "        ## Enable All Warnings",
            "        $<$<C_COMPILER_ID:MSVC>:\/W4 \/sdl>",
            "        # $<$<C_COMPILER_ID:GNU>:-Werror -Wextra>",
            "        $<$<C_COMPILER_ID:Clang,AppleClang>:-Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic>",
            "",
            "        PRIVATE",
            "        ## Enable Optimizations",
            "        $<$<C_COMPILER_ID:MSVC>:",
            "        $<$<CONFIG:Debug>:\/Od \/GS \/RTC1>",
            "        $<$<CONFIG:Release>:\/O2 \/Oi \/Ot \/GL \/Gy>",
            "        >",
            "",
            "        $<$<C_COMPILER_ID:GNU,Clang,AppleClang>:",
            "        $<$<CONFIG:Debug>:-O0>",
            "        $<$<CONFIG:Release>:-O3 -march=native>",
            "        $<$<CONFIG:MINSIZEREL>:-Os>",
            "        $<$<CONFIG:RELWITHDEBINFO>:-O2>",
            "        >",
            "",
            "        PRIVATE",
            "        ## Enable Symbol",
            "        $<$<C_COMPILER_ID:GNU,Clang,AppleClang>:",
            "        $<$<CONFIG:Debug>:-g>",
            "        $<$<CONFIG:RELWITHDEBINFO>:-g>",
            "        >",
            "",
            "        # CXX",
            "        PRIVATE",
            "        ## Enable All Warnings",
            "        $<$<CXX_COMPILER_ID:MSVC>:/W4 /sdl>",
            "        # $<$<CXX_COMPILER_ID:GNU>:-Werror -Wextra -m64>",
            "        $<$<CXX_COMPILER_ID:Clang,AppleClang>:-Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic>",
            "",
            "        PRIVATE",
            "        ## Enable Optimizations",
            "        $<$<CXX_COMPILER_ID:MSVC>:",
            "        $<$<CONFIG:Debug>:\/Od \/GS \/RTC1>",
            "        $<$<CONFIG:Release>:\/O2 \/Oi \/Ot \/GL \/Gy>",
            "        >",
            "",
            "        $<$<CXX_COMPILER_ID:GNU,Clang,AppleClang>:",
            "        $<$<CONFIG:Debug>:-O0>",
            "        $<$<CONFIG:Release>:-O3 -march=native>",
            "        $<$<CONFIG:MINSIZEREL>:-Os>",
            "        $<$<CONFIG:RELWITHDEBINFO>:-O2>",
            "        >",
            "",
            "        PRIVATE",
            "        ## Enable Symbol",
            "        $<$<CXX_COMPILER_ID:GNU,Clang,AppleClang>:",
            "        $<$<CONFIG:Debug>:-g>",
            "        $<$<CONFIG:RELWITHDEBINFO>:-g>",
            "        >",
            "",
            "        #        PRIVATE",
            "        #        # Enable Address Sanitizer",
            "        #        $<$<CXX_COMPILER_ID:GNU,Clang>:",
            "        #            $<$<VERSION_GREATER:$${CMAKE_VERSION},3.12>:",
            "        #                $<$<CONFIG:Debug>:-fsanitize=address -fno-omit-frame-pointer>",
            "        #                $<$<CONFIG:RelWithDebInfo>:-fsanitize=address -fno-omit-frame-pointer>",
            "        #            >",
            "        #        >",
            "",
            "        ## Encoding",
            "        $<$<CXX_COMPILER_ID:MSVC>:/source-charset:utf-8 /execution-charset:utf-8>",
            ")",
            "",
            "# 设置rpath",
            "set_target_properties($${PROJECT_NAME} PROPERTIES",
            "    BUILD_WITH_INSTALL_RPATH TRUE",
            "    INSTALL_RPATH \"$$ORIGIN\/..\/libs:$$ORIGIN.\/libs:$$ORIGIN.\/\"",
            "    BUILD_RPATH \"$$ORIGIN\/..\/libs:$$ORIGIN.\/libs:$$ORIGIN.\/\")",
            "",
            "# macro",
            "# target_compile_definitions($${PROJECT_NAME} PRIVATE",
            "# )",
            "",
            "if (CMAKE_BUILD_TYPE AND (CMAKE_BUILD_TYPE STREQUAL \"Debug\"))",
            "    target_compile_definitions($${PROJECT_NAME} PRIVATE USER_DEBUG_MODE)",
            "endif()",
            "",
            "# header",
            "# target_include_directories($${PROJECT_NAME} PRIVATE",
            "# )",
            "",
            "# lib dir",
            "# target_link_directories($${PROJECT_NAME} PRIVATE",
            "# )",
            "",
            "# target_link_libraries($${PROJECT_NAME} PRIVATE",
            "# )",
            "$1",
            ""
        ],
        "description": "CMake Binary Template Code"
    }
}

