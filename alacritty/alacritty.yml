#import:
#  - /path/to/alacritty.yml

env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 80
    lines: 30

  position:
    x: 400
    y: 300

  padding:
    x: 0
    y: 0

  dynamic_padding: false
  decorations: full
  opacity: 1.0
  startup_mode: Windowed
  title: Alacritty
  dynamic_title: false
  decorations_theme_variant: None
  resize_increments: false

scrolling:
  history: 100000
  # Scrolling distance multiplier.
  #multiplier: 3

font:
  # Normal (roman) font face
  normal:
    family: ComicMono Nerd Font
    #style: Regular

  bold:
    family: ComicMono Nerd Font
    #style: Bold

  italic:
    family: Cascadia Code
    style: Italic

  bold_italic:
    family: Cascadia Code
    style: Bold Italic

  size: 10.0
  offset:
    x: 0
    y: 0

  glyph_offset:
    x: 0
    y: 0

  builtin_box_drawing: true

draw_bold_text_with_bright_colors: true

schemes:
  tokyo-night: &tokyo-night
    primary:
      background: '#1a1b26'
      foreground: '#a9b1d6'

    # Normal colors
    normal:
      black:   '#32344a'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#ad8ee6'
      cyan:    '#449dab'
      white:   '#787c99'

    # Bright colors
    bright:
      black:   '#444b6a'
      red:     '#ff7a93'
      green:   '#b9f27c'
      yellow:  '#ff9e64'
      blue:    '#7da6ff'
      magenta: '#bb9af7'
      cyan:    '#0db9d7'
      white:   '#acb0d0'

  tokyo-night-storm: &tokyo-night-storm
    # Default colors
    primary:
      background: '#24283b'
      foreground: '#a9b1d6'

    # Normal colors
    normal:
      black:   '#32344a'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#ad8ee6'
      cyan:    '#449dab'
      white:   '#9699a8'

    # Bright colors
    bright:
      black:   '#444b6a'
      red:     '#ff7a93'
      green:   '#b9f27c'
      yellow:  '#ff9e64'
      blue:    '#7da6ff'
      magenta: '#bb9af7'
      cyan:    '#0db9d7'
      white:   '#acb0d0'

# Colors (Tomorrow Night)
#colors:
  # Default colors
  #primary:
  #  background: '#1d1f21'
  #  foreground: '#c5c8c6'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not
    # present. If the bright foreground color is not set, or
    # `draw_bold_text_with_bright_colors` is `false`, the normal foreground
    # color will be used.
    #dim_foreground: '#828482'
    #bright_foreground: '#eaeaea'

  #cursor:
  #  text: CellBackground
  #  cursor: CellForeground

  #vi_mode_cursor:
  #  text: CellBackground
  #  cursor: CellForeground

  # Search colors
  #search:
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #matches:
    #  foreground: '#000000'
    #  background: '#ffffff'
    #focused_match:
    #  foreground: '#ffffff'
    #  background: '#000000'

  # Keyboard hints
  #hints:
    # First character in the hint label
    #
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #start:
    #  foreground: '#1d1f21'
    #  background: '#e9ff5e'

    # All characters after the first one in the hint label
    #
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #end:
    #  foreground: '#e9ff5e'
    #  background: '#1d1f21'

  # Line indicator
  #
  # Color used for the indicator displaying the position in history during
  # search and vi mode.
  #
  # By default, these will use the opposing primary color.
  #line_indicator:
  #  foreground: None
  #  background: None

  # Footer bar
  #
  # Color used for the footer bar on the bottom, used by search regex input,
  # hyperlink URI preview, etc.
  #
  #footer_bar:
  #  background: '#c5c8c6'
  #  foreground: '#1d1f21'

  # Selection colors
  #
  # Colors which should be used to draw the selection area.
  #
  # Allowed values are CellForeground/CellBackground, which reference the
  # affected cell, or hexadecimal colors like #ff00ff.
  #selection:
  #  text: CellBackground
  #  background: CellForeground

  # Normal colors
  #normal:
  #  black:   '#1d1f21'
  #  red:     '#cc6666'
  #  green:   '#b5bd68'
  #  yellow:  '#f0c674'
  #  blue:    '#81a2be'
  #  magenta: '#b294bb'
  #  cyan:    '#8abeb7'
  #  white:   '#c5c8c6'

  # Bright colors
  #bright:
  #  black:   '#666666'
  #  red:     '#d54e53'
  #  green:   '#b9ca4a'
  #  yellow:  '#e7c547'
  #  blue:    '#7aa6da'
  #  magenta: '#c397d8'
  #  cyan:    '#70c0b1'
  #  white:   '#eaeaea'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '#131415'
  #  red:     '#864343'
  #  green:   '#777c44'
  #  yellow:  '#9e824c'
  #  blue:    '#556a7d'
  #  magenta: '#75617b'
  #  cyan:    '#5b7d78'
  #  white:   '#828482'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '#ff00ff' }`
  #
  #indexed_colors: []

  # Transparent cell backgrounds
  #
  # Whether or not `window.opacity` applies to all cell backgrounds or only to
  # the default background. When set to `true` all cells will be transparent
  # regardless of their background color.
  #transparent_background_colors: false

# Bell
#
# The bell is rung every time the BEL control character is received.
#bell:
  # Visual Bell Animation
  #
  # Animation effect for flashing the screen when the visual bell is rung.
  #
  # Values for `animation`:
  #   - Ease
  #   - EaseOut
  #   - EaseOutSine
  #   - EaseOutQuad
  #   - EaseOutCubic
  #   - EaseOutQuart
  #   - EaseOutQuint
  #   - EaseOutExpo
  #   - EaseOutCirc
  #   - Linear
  #animation: EaseOutExpo

  # Duration of the visual bell flash in milliseconds. A `duration` of `0` will
  # disable the visual bell animation.
  #duration: 0

  # Visual bell animation color.
  #color: '#ffffff'

  # Bell Command
  #
  # This program is executed whenever the bell is rung.
  #
  # When set to `command: None`, no command will be executed.
  #
  # Example:
  #   command:
  #     program: notify-send
  #     args: ["Hello, World!"]
  #
  #command: None

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  save_to_clipboard: true

cursor:
  style:
    shape: Beam
    blinking: On

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  vi_mode_style: None

  # Cursor blinking interval in milliseconds.
  blink_interval: 750

  # Time after which cursor stops blinking, in seconds.
  #
  # Specifying '0' will disable timeout for blinking.
  #blink_timeout: 5

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

live_config_reload: true

shell:
  program: nu
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# Offer IPC using `alacritty msg` (unix only)
#ipc_socket: true

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
#hints:
  # Keys used for the hint labels.
  #alphabet: "jfkdls;ahgurieowpq"

  # List with all available hints
  #
  # Each hint must have any of `regex` or `hyperlinks` field and either an
  # `action` or a `command` field. The fields `mouse`, `binding` and
  # `post_processing` are optional.
  #
  # The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
  # highlighted.
  #
  # The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
  # `mouse.mods` accept the same values as they do in the `key_bindings` section.
  #
  # The `mouse.enabled` field controls if the hint should be underlined while
  # the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
  #
  # If the `post_processing` field is set to `true`, heuristics will be used to
  # shorten the match if there are characters likely not to be part of the hint
  # (e.g. a trailing `.`). This is most useful for URIs and applies only to
  # `regex` matches.
  #
  # Values for `action`:
  #   - Copy
  #       Copy the hint's text to the clipboard.
  #   - Paste
  #       Paste the hint's text to the terminal or search.
  #   - Select
  #       Select the hint's text.
  #   - MoveViModeCursor
  #       Move the vi mode cursor to the beginning of the hint.
  #enabled:
  # - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
  #           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
  #   hyperlinks: true
  #   command: xdg-open
  #   post_processing: true
  #   mouse:
  #     enabled: true
  #     mods: None
  #   binding:
  #     key: U
  #     mods: Control|Shift

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty
# captures the mouse, the `Shift` modifier is automatically added as a
# requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings for actions not exclusive to mouse mode)
#
# - Mouse exclusive actions:
#
#   - ExpandSelection
#       Expand the selection to the current mouse cursor location.
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
#  - { mouse: Right,                 action: ExpandSelection }
#  - { mouse: Right,  mods: Control, action: ExpandSelection }
 - { mouse: Middle,   mode: ~Vi,                                 action: PasteSelection  }

key_bindings:
  - { key: Return,    mods: Control,                             action: CreateNewWindow         }
  - { key: Paste,                                                action: Paste                   }
  - { key: Copy,                                                 action: Copy                    }
  - { key: L,         mods: Control|Shift,                       action: ClearLogNotice          }
  # - { key: L,         mods: Control,          mode: ~Vi|~Search, chars: "\x0c"                   }
  - { key: U,         mods: Control|Shift,    mode: ~Alt,        action: ScrollHalfPageUp        }
  - { key: D,         mods: Control|Shift,    mode: ~Alt,        action: ScrollHalfPageDown      }
  - { key: PageUp,    mods: Control|Shift,    mode: ~Alt,        action: ScrollPageUp            }
  - { key: PageDown,  mods: Control|Shift,    mode: ~Alt,        action: ScrollPageDown          }
  - { key: Home,      mods: Control|Shift,    mode: ~Alt,        action: ScrollToTop             }
  - { key: End,       mods: Control|Shift,    mode: ~Alt,        action: ScrollToBottom          }

  # Vi Mode
  - { key: I,         mods: Shift|Control,    mode: ~Search,     action: ToggleViMode            }
  - { key: K,                                 mode: Vi|~Search,  action: Up                      }
  - { key: J,                                 mode: Vi|~Search,  action: Down                    }
  - { key: H,                                 mode: Vi|~Search,  action: Left                    }
  - { key: L,                                 mode: Vi|~Search,  action: Right                   }
  - { key: Up,                                mode: Vi|~Search,  action: Up                      }
  - { key: Down,                              mode: Vi|~Search,  action: Down                    }
  - { key: Left,                              mode: Vi|~Search,  action: Left                    }
  - { key: Right,                             mode: Vi|~Search,  action: Right                   }
  - { key: Z,                                 mode: Vi|~Search,  action: CenterAroundViCursor    }
  # - { key: Up,                                mode: Vi|~Search,  action: ScrollLineUp            }
  # - { key: Down,                              mode: Vi|~Search,  action: ScrollLineDown          }
  - { key: Up,                                mode: Vi|~Search,  action: ScrollLineUp            }
  - { key: Down,                              mode: Vi|~Search,  action: ScrollLineDown          }
  - { key: PageUp,    mods: Control|Shift,    mode: Vi|~Search,  action: ScrollPageUp            }
  - { key: PageDown,  mods: Control|Shift,    mode: Vi|~Search,  action: ScrollPageDown          }
  - { key: Home,      mods: Control|Shift,    mode: Vi|~Search,  action: ScrollToTop             }
  - { key: End,       mods: Control|Shift,    mode: Vi|~Search,  action: ScrollToBottom          }
  # - { key: Escape,                            mode: Vi|~Search,  action: ClearSelection          }
  - { key: Escape,                            mode: Vi|~Search,  action: ToggleViMode            }
  - { key: Y,                                 mode: Vi|~Search,  action: Copy                    }
  - { key: Y,                                 mode: Vi|~Search,  action: ClearSelection          }
  - { key: P,                                 mode: Vi|~Search,  action: Paste                   }
  - { key: V,                                 mode: Vi|~Search,  action: ToggleNormalSelection   }
  - { key: V,         mods: Shift,            mode: Vi|~Search,  action: ToggleLineSelection     }
  - { key: V,         mods: Control,          mode: Vi|~Search,  action: ToggleBlockSelection    }
  - { key: V,         mods: Alt,              mode: Vi|~Search,  action: ToggleSemanticSelection }
  - { key: Return,                            mode: Vi|~Search,  action: Open                    }
  - { key: Key0,                              mode: Vi|~Search,  action: First                   }
  - { key: Key2,                              mode: Vi|~Search,  action: Last                    }
  #- { key: H,         mods: Shift,            mode: Vi|~Search,  action: High                    }
  #- { key: M,         mods: Shift,            mode: Vi|~Search,  action: Middle                  }
  #- { key: L,         mods: Shift,            mode: Vi|~Search,  action: Low                     }
  - { key: B,                                 mode: Vi|~Search,  action: WordLeft                }
  - { key: W,                                 mode: Vi|~Search,  action: WordRight               }
  - { key: E,                                 mode: Vi|~Search,  action: WordRightEnd            }
  - { key: N,                                 mode: Vi|~Search,  action: SearchNext              }
  - { key: N,      mods: Shift,               mode: Vi|~Search,  action: SearchPrevious          }

  # Search Mode
  - { key: Return,                            mode: Search|Vi,   action: SearchConfirm           }
  - { key: Escape,                            mode: Search,      action: SearchCancel            }
  - { key: U,      mods: Control,             mode: Search,      action: SearchClear             }
  # - { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  # - { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  # - { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  # - { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  # - { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  - { key: Return,                            mode: Search|~Vi,  action: SearchFocusNext         }
  - { key: Return, mods: Shift,               mode: Search|~Vi,  action: SearchFocusPrevious     }

  # (Windows, Linux, and BSD only)
  - { key: V,      mods: Control|Shift,       mode: ~Vi,         action: Paste                   }
  - { key: C,      mods: Control|Shift,                          action: Copy                    }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  - { key: Key0,   mods: Control,                                action: ResetFontSize           }
  - { key: Plus,   mods: Control,                                action: IncreaseFontSize        }
  - { key: Minus,  mods: Control,                                action: DecreaseFontSize        }

  # (Windows only)
  - { key: Return,   mods: Alt,                                  action: ToggleFullscreen        }

  # (macOS only)
  #- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"                 }
  #- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory          }
  #- { key: Key0,           mods: Command,                    action: ResetFontSize         }
  #- { key: Equals,         mods: Command,                    action: IncreaseFontSize      }
  #- { key: Plus,           mods: Command,                    action: IncreaseFontSize      }
  #- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize      }
  #- { key: Minus,          mods: Command,                    action: DecreaseFontSize      }
  #- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize      }
  #- { key: V,              mods: Command,                    action: Paste                 }
  #- { key: C,              mods: Command,                    action: Copy                  }
  #- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection        }
  #- { key: H,              mods: Command,                    action: Hide                  }
  #- { key: H,              mods: Command|Alt,                action: HideOtherApplications }
  #- { key: M,              mods: Command,                    action: Minimize              }
  #- { key: Q,              mods: Command,                    action: Quit                  }
  #- { key: W,              mods: Command,                    action: Quit                  }
  #- { key: N,              mods: Command,                    action: CreateNewWindow       }
  #- { key: F,              mods: Command|Control,            action: ToggleFullscreen      }
  #- { key: F,              mods: Command, mode: ~Search,     action: SearchForward         }
  #- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward        }

debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Renderer override.
  #   - glsl3
  #   - gles2
  #   - gles2_pure
  #renderer: None

  # Print all received window events.
  #print_events: false

  # Highlight window damage information.
  #highlight_damage: false
